trigger:
  branches:
    include:
    - master
    exclude:
    - RELEASES.txt
    - azure_pipelines-develop.yml
    - azure_pipelines.yml
 
pool:
  name: Azure Pipelines
  vmImage: 'ubuntu-latest'
 
variables:
  env: 'prod'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: stage_1
  displayName: 'build and test'
  jobs:
  - job: Provision
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: GoTool@0
      displayName: 'Use Go 1.13'
      inputs:
        version: 1.13
    - task: Go@0
      displayName: 'go get'
      inputs:
        arguments: '-d'
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          go get -v "github.com/marshyon/semverUtils"
          go get -v github.com/cucumber/godog/cmd/godog
      displayName: 'initialise project'
    - task: Go@0
      inputs:
        command: 'test'
        arguments: '-v ./...'
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          /home/vsts/go/bin/godog
      displayName: 'run godog tests'
    - task: Go@0
      displayName: 'go build'
      inputs:
        command: build
        arguments: '-o semverutil cmd/version/main.go'
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(Build.Repository.LocalPath)'
        includeRootFolder: False
    - task: PublishBuildArtifacts@1
      displayName: 'Publish artifact'
      inputs:
        ArtifactName: semverUtilApp
      condition: succeededOrFailed()
- stage: stage_2
  displayName: 'publish relase'
  jobs:
  - job: Publish
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: InstallSSHKey@0
      displayName: 'Install an SSH key'
      inputs:
        knownHostsEntry: '|1|OYu5fjyruG+jLSxpgKkLNgwKbSU=|10iWMohPRDOgv5HBhEBSQZJLcLo= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAsbJNNKxY2GXWG1oOO71rF+iAB/iSjegQxcYiUHha3A2f4u+bpz5E1r5/kbsYNaZPSRZeOJmPOmjy2xglehzKU='
        sshPublicKey: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDkGBjoZIF1vKCPGusI+xwgeVsNEWpoTGPHrC4veVpAr86SevU41tjpJJpcy37yGHGuzdsf27lebSzK77/USKBUNBmpOUD8/DAiZ8MQ6jR23tzDCU6UeFy2QukHcs9fIE4oVXM7mFgtxlJ6X4KahBVXU6CVvyWPowge1egydOJzfktU7ooKToe4n9hW53Kz8+W0UwvVcnEJ/lsuQgvwS5entQ0c1yvBrBQ0sfrGVe1PHtCTjExoU8Tubx2nMc5exVQJN5+cnvyXZyNEG6jxuY2Ey9Xdkaa16fxELs3W1iepdZFEBgE4C5GoR3/RTFafxyfadVAOF/y0WxgHR7mnODHp jon@jon-HP-Pavilion-Laptop-14-ce0xxx'
        sshPassphrase: HZWRQu9BWY4pnk
        sshKeySecureFile: 'id_az_devops_rsa'
    - task: DownloadPipelineArtifact@2
      inputs:
        artifact: semverUtilApp
        path: $(Build.SourcesDirectory)/zip
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          find ~/.ssh
          cd $(Build.SourcesDirectory)/zip
          unzip *.zip
          git --no-pager log --decorate=short --no-color 
          echo "semverutil : "
          VERSION="v"$(./semverutil)
          echo "["$VERSION"]"
          git config --global user.name "marshyon"
          git tag $VERSION
          git push origin --tags
      displayName: 'label release'
    - task: GitHubRelease@1
      displayName: 'GitHub release (create)'
      inputs:
        gitHubConnection: 'GitHub marshyon'
        repositoryName: '$(Build.Repository.Name)'
        action: 'create'
        target: '$(Build.SourceVersion)'
        tagSource: 'gitTag'
        tagPattern: 'v\d+\.\d+\.\d+'
        assets: '$(Build.SourcesDirectory)/zip/semverutil'
        changeLogCompareToRelease: 'lastFullRelease'
        changeLogType: 'commitBased'